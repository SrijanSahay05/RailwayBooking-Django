# services:
#   web:
#     build:
#       context: .
#       dockerfile: Dockerfile.prod
#     command: gunicorn dvmtask2.wsgi:application --bind 0.0.0.0:8000 --workers 3 --threads 2
#     volumes:
#       - ./static:/usr/src/app/staticfiles
#       - ./media:/usr/src/app/media
#     ports:
#       - "8000:8000"
#     env_file:
#       - .env.prod
#     depends_on:
#       - db
#     entrypoint: /usr/src/app/entrypoint.prod.sh
#
#   db:
#     image: postgres:16
#     environment:
#       POSTGRES_DB: ${POSTGRES_DB}
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U dvmtask2"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#     env_file:
#       - .env.prod
#
# nginx:
#   image: nginx:latest
#   ports:
#     - "80:80"
#     - "443:443"
#   volumes:
#     - ./static:/app/staticfiles
#     - ./mediafiles:/app/mediafiles
#     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
#     - certbot_certs:/etc/letsencrypt
#     - certbot_challenges:/var/www/certbot
#   depends_on:
#     - web
#
# volumes:
#   static_data:
#   media_data:
#   postgres_data:
#
#
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn dvmtask2.wsgi:application --bind 0.0.0.0:8000 --workers 3 --threads 2
    volumes:
      - ./static:/usr/src/app/staticfiles
      - ./media:/usr/src/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env.prod
    depends_on:
      - db

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.prod

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./static:/usr/src/app/staticfiles
      - ./mediafiles:/usr/src/app/mediafiles
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - certbot_certs:/etc/letsencrypt
      - certbot_challenges:/var/www/certbot
    depends_on:
      - web
volumes:
  postgres_data:
  certbot_certs:
  certbot_challenges:
